name: Build Application

on:
  release:
    types: [created]

permissions:
  contents: write  # Allows Assets Upload to the Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry install

      - name: Generate Icons
        run: |
          poetry run generate-icons
        shell: bash

      - name: Build Executable (Windows)
        if: matrix.os == 'windows-latest'
        run: poetry run pyinstaller app/VideoStabilizer.spec

      - name: Build Executable (Mac & Linux)
        if: matrix.os != 'windows-latest'
        run: poetry run pyinstaller app/VideoStabilizer.spec

      - name: Rename and prepare artifacts
        shell: bash # important for windows case
        run: |
          if [[ -f dist/VideoStabilizer.exe ]]; then
            echo "Windows Build gefunden"
          elif [[ -d dist/VideoStabilizer.app ]]; then
            echo "macOS .app gefunden, wird gezippt..."
            zip -r dist/VideoStabilizer.app.zip dist/VideoStabilizer.app
          elif [[ -f dist/VideoStabilizer ]]; then
            echo "Linux Build gefunden, wird umbenannt"
            mv dist/VideoStabilizer dist/VideoStabilizer.bin
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: VideoStabilizer-${{ matrix.os }}
          path: dist/VideoStabilizer*

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
            files: |
              dist/VideoStabilizer.exe
              dist/VideoStabilizer.app.zip
              dist/VideoStabilizer.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
